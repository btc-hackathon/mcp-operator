apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "mcp.opendatahub.io/v1alpha1",
          "kind": "MCPServer",
          "metadata": {
            "annotations": {
              "mcp.opendatahub.io/deploymentmode": "RawDeployment",
              "mcp.opendatahub.io/mcpservertemplate": "mcp-operator-mcpservertemplate-default",
              "mcp.opendatahub.io/visibility": "exposed"
            },
            "labels": {
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "mcp-operator"
            },
            "name": "mcpserver-sample"
          },
          "spec": {
            "container": {
              "image": "quay.io/vajain/mcp-workday:4.0",
              "name": "mcpserver-container"
            }
          }
        },
        {
          "apiVersion": "mcp.opendatahub.io/v1alpha1",
          "kind": "MCPServerTemplate",
          "metadata": {
            "annotations": {
              "openshift.io/display-name": "Default Model Server Template"
            },
            "labels": {
              "opendatahub.io/dashboard": "true"
            },
            "name": "mcp-operator-mcpservertemplate-default",
            "namespace": "mcp-operator-system"
          },
          "spec": {
            "containers": [
              {
                "image": "$(mcp-server-image)",
                "imagePullPolicy": "IfNotPresent",
                "name": "mcpserver-container",
                "ports": [
                  {
                    "containerPort": 8080,
                    "protocol": "TCP"
                  }
                ],
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File"
              }
            ]
          }
        },
        {
          "apiVersion": "mcp.opendatahub.io/v1alpha1",
          "kind": "MCPServerTemplate",
          "metadata": {
            "labels": {
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "mcp-operator"
            },
            "name": "mcpservertemplate-sample"
          },
          "spec": {
            "containers": [
              {
                "image": "$(mcp-server-image)",
                "imagePullPolicy": "IfNotPresent",
                "name": "mcpserver-container",
                "ports": [
                  {
                    "containerPort": 8080,
                    "protocol": "TCP"
                  }
                ],
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File"
              }
            ]
          }
        }
      ]
    capabilities: Basic Install
    createdAt: "2025-05-26T18:54:14Z"
    operators.operatorframework.io/builder: operator-sdk-v1.39.2
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v4
  name: mcp-operator.v0.0.2
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: MCPServer is the Schema for the mcpservers API
      displayName: MCPServer
      kind: MCPServer
      name: mcpservers.mcp.opendatahub.io
      statusDescriptors:
      - description: Conditions store the status conditions of the MCPServer instances
        displayName: Conditions
        path: conditions
      version: v1alpha1
    - description: MCPServerTemplate is the Schema for the mcpservertemplates API
      displayName: MCPServer Template
      kind: MCPServerTemplate
      name: mcpservertemplates.mcp.opendatahub.io
      statusDescriptors:
      - description: Conditions store the status conditions of the MCPServerTemplate
          instances
        displayName: Conditions
        path: conditions
      version: v1alpha1
  description: Operator help to deploy any MCP Server applicatio in Openshift env
  displayName: MCP Operator
  icon:
  - base64data: ""
    mediatype: ""
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          - serving.knative.dev
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - mcp.opendatahub.io
          resources:
          - mcpservers
          - mcpservertemplates
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - mcp.opendatahub.io
          resources:
          - mcpservers/finalizers
          - mcpservertemplates/finalizers
          verbs:
          - update
        - apiGroups:
          - mcp.opendatahub.io
          resources:
          - mcpservers/status
          - mcpservertemplates/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - serving.knative.dev
          resources:
          - services/status
          verbs:
          - get
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: mcp-operator-controller-manager
      deployments:
      - label:
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: mcp-operator
          control-plane: controller-manager
        name: mcp-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --metrics-bind-address=:8443
                - --leader-elect
                - --health-probe-bind-address=:8081
                command:
                - /manager
                env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                image: quay.io/vajain/mcp-operator:8.0
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 1Gi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
              serviceAccountName: mcp-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: mcp-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - MCP
  - Operator
  - RedHat
  - Openshift
  links:
  - name: Mcp Operator
    url: https://mcp-operator.domain
  maintainers:
  - email: vajain@redhat.com
    name: Vaibhav Jain
  maturity: alpha
  provider:
    name: Vaibhav Jain
    url: https://github.com/btc-hackathon/mcp-operator
  version: 0.0.2
